-- Get services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

-- Local player and character
local localPlayer = Players.LocalPlayer
local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()

-- Trail properties (adjust as needed)
local trailLength = 10 -- Length of the trail
local trailColor = BrickColor.new("Bright Red") -- Color of the trail
local trailThickness = 0.2 -- Thickness of the trail

-- Function to create a trail
local function createTrail(origin, target)
  local direction = (target.Position - origin).unit * 100 -- Adjust fire distance
  local trail = Instance.new("Beam")
  trail.Parent = workspace
  trail.CFrame = CFrame.new(origin)
  trail.Size = Vector3.new(trailLength, trailThickness, trailThickness)
  trail.Color = trailColor
  trail.Attachment0 = trail

  -- Animate the trail to move in the direction
  local tweenService = game:GetService("TweenService")
  local moveTween = tweenService:Create(trail, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In))
  moveTween.Vector3Property = "LocalPosition"
  moveTween.End = origin + direction  
  moveTween:Play()

  -- Destroy the trail after a short duration
  wait(0.2)
  trail:Destroy()
end

-- Main loop (check for targets every 0.1 seconds)
RunService.Heartbeat:Connect(function()
  if character then
    -- Find closest player (replace with your targeting logic)
    local closestPlayer = nil
    local closestDistance = math.huge
    for _, otherPlayer in ipairs(Players:GetPlayers()) do
      if otherPlayer ~= localPlayer then
        local distance = (character.HumanoidRootPart.Position - otherPlayer.Character.HumanoidRootPart.Position).magnitude
        if not closestPlayer or distance < closestDistance then
          closestPlayer = otherPlayer
          closestDistance = distance
        end
      end
    end
    
    -- Create a trail if a target is found
    if closestPlayer then
      local origin = character.Head.LocalPoint + character.Head.LookVector * 0.5 -- Fire from slightly ahead of the head
      createTrail(origin, closestPlayer.Character.Torso) -- Target torso (adjust target part if needed)
    end
  end
end)
